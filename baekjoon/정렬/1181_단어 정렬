#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
using namespace std;

/*문자열 벡터를 그냥 sort하는 경우, 길이에 상관없이 맨 앞에서부터 알파벳 크기 순으로
정렬하여, 긴 문자열이 맨 앞으로 가는 경우가 생긴다.*/
bool compare(string &a, string &b){ //문자열들을 비교하므로 인자는 string
    if (a.length() == b.length()){ //길이가 같으면 사전식 비교해서 큰게 뒤로
        return a < b;
    }else { //길이가 긴게 뒤로
        return a.length() < b.length();
    }
}

int main(){
    int n;
    cin >> n;
    vector<string> ss;
    for(int i=0; i< n; i++){
        string s;
        cin >> s;
        ss.push_back(s);
    }
    
    /*unique는 중복되는 요소를 쓰레기값으로 처리해서 뒤로 밀어낸다
    unique함수 실행이 끝나고 리턴하는 값은 벡터의 첫번째 쓰레기값의 주소이므로, 
    그 위치부터 맨마지막까지 erase로 제거해준다.
    unique함수 특성상, 벡터는 미리 sorted되어 있어야 함.*/
    sort(ss.begin(), ss.end(), compare);
    ss.erase(unique(ss.begin(), ss.end()), ss.end());

    for(int i=0; i<ss.size();i++){
        cout << ss[i] << '\n';
    }
}
